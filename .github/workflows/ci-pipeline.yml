name: Continuous Integration
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron: "0 1 * * *"
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Docker Images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build
        run: docker build --target development --tag todo-app:test .
      - name: Unit and Integration Tests
        run: docker run --env-file ./.env.test --mount type=bind,source="$(pwd)",target=/todo-app --entrypoint poetry todo-app:test run pytest --cov-report xml --cov ./todo_app
      - name: Publish Coverage
        uses: codecov/codecov-action@v2
  static:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Snyk
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Cache Docker Images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build
        run: docker build --target development --tag todo-app:test .
      - name: Lint
        run: docker run --mount type=bind,source="$(pwd)",target=/todo-app --entrypoint bash todo-app:test ./scripts/lint
  deploy_docker:
    name: Deploy to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    needs: [build, static]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          target: production
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest , ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ github.sha }}
      - name: Login to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Push image to Heroku
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/todo-app registry.heroku.com/todo-app-jjs/web
          docker push registry.heroku.com/todo-app-jjs/web
      - name: Release on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release web -a todo-app-jjs