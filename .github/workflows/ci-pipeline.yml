name: Continuous Integration
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron: "0 1 * * *"
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Docker Images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build
        run: docker build --target development --tag todo-app:test .
      - name: Unit and Integration Tests
        run: docker run --env-file ./.env.test --mount type=bind,source="$(pwd)",target=/todo-app --entrypoint poetry todo-app:test run pytest --cov-report xml --cov ./todo_app
      - name: Publish Coverage
        uses: codecov/codecov-action@v2
  static:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Snyk
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Cache Docker Images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build
        run: docker build --target development --tag todo-app:test .
      - name: Lint
        run: docker run --mount type=bind,source="$(pwd)",target=/todo-app --entrypoint bash todo-app:test ./scripts/lint
  deploy:
    name: Deploy
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_prefix: ""
      TF_VAR_github_client_id: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
      TF_VAR_github_client_secret: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}
      TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
      TF_VAR_loggly_token: ${{ secrets.LOGGLY_TOKEN }}
    runs-on: ubuntu-latest
    if: ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'workflow_dispatch' }}
    needs: [build, static]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Cache Docker Images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          target: production
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest , ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ github.sha }}
      - name: Terraform init
        run: terraform init
      - name: Terraform Apply
        run: terraform apply -auto-approve
      - name: Redeploy on Azure
        run: curl -dH -X POST "$(terraform output -raw cd_webhook)"